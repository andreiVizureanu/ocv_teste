# Click the Variables button, above, to create your own variables.
GET ${exampleVariable1} // _search
{
  "query": {
    "${exampleVariable2}": {} // match_all
  }
}

PUT my-index-000001
{
  "mappings": {
    "properties": {
      "my_vector": {
        "type": "dense_vector",
        "dims": 3  
      },
      "my_text" : {
        "type" : "keyword"
      }
    }
  }
}

PUT my-index-000001/_doc/1
{
  "my_text" : "text1",
  "my_vector" : [0.5, 10, 6]
}


PUT my-index-000001/_doc/3
{
  "my_vector": [0.5, 10, 6],
  "status" : "published"
}

PUT my-index-000001/_doc/2
{
  "my_text" : "text2",
  "my_vector" : [-0.5, 10, 10]
}

PUT my-index-000001/_doc/4
{
  "my_vector": [-0.5, 10, 10],
  "status" : "published"
}

GET my-index-000001/_search
{
  "query": {
    "script_score": {
      "query" : {
        "bool" : {
          "filter" : {
            "term" : {
              "status" : "published" 
            }
          }
        }
      },
      "script": {
        "source": "cosineSimilarity(params.query_vector, 'my_dense_vector') + 1.0", 
        "params": {
          "query_vector": [4, 3.4, -0.2]  
        }
      }
    }
  }
}





PUT my-index-000001
{
  "mappings": {
    "properties": {
      "my_dense_vector": {
        "type": "dense_vector",
        "dims": 3
      },
      "status" : {
        "type" : "keyword"
      }
    }
  }
}

PUT my-index-000001/_doc/1
{
  "my_dense_vector": [0.5, 10, 6],
  "status" : "published"
}
PUT my-index-000001/_doc/3
{
  "my_dense_vector": [0.5, 200, 6],
  "status" : "published"
}
PUT my-index-000001/_doc/4
{
  "my_dense_vector": [-0.5, 10, 10],
  "status" : "published"
}

PUT my-index-000001/_doc/2
{
  "my_dense_vector": [0, 110, 110],
  "status" : "published"
}


PUT my-index-000001/_doc/9
{
  "my_dense_vector": [4, 85, 214],
  "status" : "published"
}

POST my-index-000001/_refresh

POST my-index-000001/_doc
{
  "my_dense_vector": [56, 4, 56],
  "status" : "published"
}
GET my-index-000001/_search
{
  "query": {
    "script_score": {
      "query" : {
        "bool" : {
          "filter" : {
            "term" : {
              "status" : "published" 
            }
          }
        }
      },
      "script": {
        "source": "cosineSimilarity(params.query_vector, 'my_dense_vector')", 
        "params": {
          "query_vector": [214, 214, 4]  
        }
      }
    }
  }
}

POST /my-index-000001/_delete_by_query
{
  "query": {
    "match_all": {
    }
  }
}
